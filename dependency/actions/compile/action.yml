name: 'Compile NGINX on Target'
description: |
  Compiles NGINX given a version, output directory, and a target image to compile on

on:
  push:
    branches:
      - 'dep-manage'
      - '!main'

inputs:
  version:
    description: 'dependency version'
    required: true
  outputDir:
    description: 'output directory'
    required: true
  target:
    description: 'dependency OS target variant'
    required: true

outputs:
  tarball-name:
    description: name of the tarball
    value: ${{ steps.compile.outputs.tarball-name }}
  tarball-path:
    description: full path of the tarball
    value: ${{ steps.compile.outputs.tarball-path }}
  sha256:
    description: SHA256 of the dependency
    value: ${{ steps.compile.outputs.sha256 }}
  upstream-sha256:
    description: SHA256 of the upstream dependency
    value: ${{ steps.compile.outputs.upstream-sha256 }}

runs:
  using: 'composite'
  steps:
  
  - name: docker build
    id: docker-build
    env:
      SKIP_LOGIN: true
    uses: actions-hub/docker/cli@master
    with:
      args: "build -t compilation -f dependency/actions/compile/${{ inputs.target }}.Dockerfile dependency/actions/compile"

  - name: docker run
    id: docker-run
    uses: actions-hub/docker/cli@master
    env:
      SKIP_LOGIN: true
    with:
      args: "run -v /home/runner/work/nginx/nginx:/home compilation --version ${{ inputs.version }} --output-dir /home --target ${{ inputs.target }}"

  - name: copy artifacts into output dir
    shell: bash
    run: cp -r $GITHUB_WORKSPACE/*.tgz* ${{ inputs.output-dir }}

  - name: print contents of output dir
    shell: bash
    run: ls -al ${{ inputs.output-dir }}
